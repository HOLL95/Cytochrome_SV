import multiprocessing
def merge_names(a, b):
    return a

inferred_params2=[-0.05897077320642114, 0.012624609618582739, 569.8770986714504, 137.37161854510956, 0.0008889805390117373, 0.008340803598526805, 0.0010715780154989737, 4.964566158449646e-05, 5.2754243128435144e-11, 9.014645134635346, 4.449177598843859, 5.024539591886025, 0.5819447228966595]
inferred_params3=[-0.08064031224498379, 0.020906827217859487, 63.01964378454537, 112.80693965100555, 0.0007989280702348236, -0.008716352699352406, 0.0012650098345725197, -2.60067208995296e-05, 2.9678863151432805e-11, 9.014741538924035, 5.49549816495015, 5.193383660743178, 0.5999999698409333]
inferred_params4=[-0.07133935323836932, 0.04433940419884379, 217.58306150192792, 135.0495596023161, 9.62463515705647e-06, 0.01730398477905308, 0.04999871276633058, -0.0007206743270165433, 1.37095896576959e-11, 9.01499164308653, 4.7220768639743085, 4.554136092744141, 0.5999999989106146]
SV_params=[inferred_params2, inferred_params3, inferred_params4]
with multiprocessing.Pool(processes=3) as pool:
    results = pool.starmap(merge_names, zip(SV_params, ["timeseries"]*3))
print(results)


import numpy as np
import time
import itertools
start=time.time()
z=np.linspace(0, 10, 11)
y=np.linspace(10, 20, 11)
x=[[[0,0] for x in range(0, 11)] for y in range(0, 11)]
for i in range(0, 11):
    for j in range(0, 11):
        x[i][j]=[z[i], y[j]]
p=itertools.chain(*x)
print(time.time()-start)
print(list(p))
print(x)
